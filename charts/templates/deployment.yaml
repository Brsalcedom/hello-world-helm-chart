apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.pod.name }}"
  labels:
    app: "{{ .Values.pod.label }}"
    framework: "javascript"
    resourcetype: "pod"
    source: "eks"
    domain: "{{ .Values.pod.domain }}"
    subdomain: "{{ .Values.pod.subdomain }}"
    capability: "{{ .Values.pod.capability }}"
    team: "{{ .Values.pod.subdomain }}"
    log-level: "{{ .Values.pod.log }}"
    kong: "{{ .Values.pod.kong }}"
    api-gtw: "{{ .Values.pod.apigtw }}"
    repository: "{{ .Values.pod.repoName }}"
    blue.github/actor: "{{ .Values.pod.actor }}"
    org: "blue-express"
    branch: "{{ .Values.pod.branch }}"
    tags.datadoghq.com/env: "{{ .Values.pod.environment }}"
    tags.datadoghq.com/version: "{{ .Values.pod.msVersionValue }}"
    tags.datadoghq.com/service: "{{ .Values.pod.name }}"
    admission.datadoghq.com/enabled: "{{ if and (eq .Values.pod.environment "production") (.Values.pod.apmTrace) }}true{{ else }}false{{ end }}"
  namespace: "{{ .Values.pod.namespace }}"
spec:
  replicas: {{ .Values.pod.replicas }}
  selector:
    matchLabels:
      app: "{{ .Values.pod.selectorMatchLabelApp }}"
  template:
    metadata:
      annotations:
      labels:
        app: "{{ .Values.pod.label }}"
        framework: "javascript"
        resourcetype: "pod"
        source: "eks"
        domain: "{{ .Values.pod.domain }}"
        subdomain: "{{ .Values.pod.subdomain }}"
        capability: "{{ .Values.pod.capability }}"
        team: "{{ .Values.pod.subdomain }}"
        log-level: "{{ .Values.pod.log }}"
        kong: "{{ .Values.pod.kong }}"
        api-gtw: "{{ .Values.pod.apigtw }}"
        repository: "{{ .Values.pod.repoName }}"
        blue.github/actor: "{{ .Values.pod.actor }}"
        org: "blue-express"
        branch: "{{ .Values.pod.branch }}"
        tags.datadoghq.com/env: "{{ .Values.pod.environment }}"
        tags.datadoghq.com/version: "{{ .Values.pod.msVersionValue }}"
        tags.datadoghq.com/service: "{{ .Values.pod.name }}"
        admission.datadoghq.com/enabled: "{{ if and (eq .Values.pod.environment "production") (.Values.pod.apmTrace) }}true{{ else }}false{{ end }}"
    spec:
      containers:
      - image: "{{ .Values.pod.containerImageRegistrySource }}"
        imagePullPolicy: "{{ .Values.pod.imagePullPolicy }}"
        name: "{{ .Values.pod.containerName }}"
        env:
        - name: "{{ .Values.pod.msVersionVariable }}"
          value: "{{ .Values.pod.msVersionValue }}"
        - name: TZ
          value: America/Santiago
        ports:
        - containerPort: {{ .Values.pod.containerPort }}
          protocol: "{{ .Values.pod.containerProtocol }}"
        resources:
          requests:
            cpu: {{ .Values.pod.resources.requests.cpu }}
            memory: "{{ .Values.pod.resources.requests.memory }}"
          limits:
            cpu: {{ .Values.pod.resources.limits.cpu }}
            memory: "{{ .Values.pod.resources.limits.memory }}"
        volumeMounts:
        - name: tz-chile
          mountPath: /etc/localtime
      volumes:
      - name: tz-chile
        hostPath:
          path: /usr/share/zoneinfo/America/Santiago